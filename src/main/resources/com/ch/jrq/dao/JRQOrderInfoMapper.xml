<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.ch.jrq.dao.JRQOrderInfoMapper">
    
    <!-- 查询交易数据 -->
    <select id="queryTradeDataList" parameterType="java.util.Map" resultType="com.ch.jrq.domain.TradeData">
			SELECT
				a.trader_name AS traderName,
				a.symbol AS symbol,
				a.open_time AS openTime,
				a.close_time AS closeTime,
				a.open_price AS openPrice,
				a.close_price AS closePrice,
				a.take_profit AS tp,
				a.stop_loss AS sl,
				a.profit AS profit,
				a.volume AS volume,
				a.open_status AS openStatus,
				a.close_status AS closeStatus,
				a.open_describe AS openDescribe,
				a.close_describe AS closeDescribe
			FROM
				jrq_order_info a
            <where>
            <include refid="whereConditionsForOrder"></include>
            </where>
			ORDER BY  close_status ASC,open_time DESC
    </select>
    
    <sql id="whereConditionsForOrder"> 
        <if test="startTime != null and startTime != '' ">
			and str_to_date(a.open_time,'%Y-%m-%d %T') &gt;= str_to_date(#{startTime},'%Y-%m-%d %T')
		</if>
		<if test="endTime != null and endTime != '' ">
		    and str_to_date(a.open_time,'%Y-%m-%d %T')  &lt;= str_to_date(#{endTime},'%Y-%m-%d %T')
		</if>
		<if test="traderId != null and traderId != '' ">
		    and a.trader_id= #{traderId}
		</if>
		<if test="symbol != null and symbol != '' ">
		    and a.symbol= #{symbol}
		</if>
		<if test="orderId != null and orderId != '' ">
		    and a.order_id= #{orderId}
		</if>
    </sql> 
    
    <!-- 查询货币对信息 -->
    <select id="querySymbolList" parameterType="java.util.Map" resultType="com.ch.jrq.domain.TradeData">
		SELECT DISTINCT
			symbol
		FROM
			jrq_order_info
		GROUP BY
			symbol
    </select>
    
    <!-- 批量新增交易订单数据 -->    
    <insert id="addOrderInfoByList" parameterType="java.util.List">
		INSERT INTO jrq_order_info (
		order_id,
		trader_id,
		trader_name,
		symbol,
		open_time,
		close_time,
		open_price,
		close_price,
		volume,
		stop_loss,
		take_profit,
		profit,
		open_status,
		open_describe,
		close_status,
		close_describe,
		content,
		create_time
	)
	SELECT a.*
	FROM(
	<foreach collection="list" item="item" index="index" separator="UNION ALL">
		SELECT
		#{item.orderId,jdbcType=VARCHAR} order_id,
		#{item.traderId,jdbcType=VARCHAR} trader_id,
		#{item.traderName,jdbcType=VARCHAR} trader_name,
		#{item.symbol,jdbcType=VARCHAR} symbol,
		#{item.openTime,jdbcType=VARCHAR} open_time,
		#{item.closeTime,jdbcType=VARCHAR} close_time,
		#{item.openPrice,jdbcType=VARCHAR} open_price,
		#{item.closePrice,jdbcType=VARCHAR} close_price,
		#{item.volume,jdbcType=VARCHAR} volume,
		#{item.stopLoss,jdbcType=VARCHAR} stop_loss,
		#{item.takeProfit,jdbcType=VARCHAR} take_profit,
		#{item.profit,jdbcType=VARCHAR} profit,
		#{item.openStatus,jdbcType=VARCHAR} open_status,
		#{item.openDescribe,jdbcType=VARCHAR} open_describe,
		#{item.closeStatus,jdbcType=VARCHAR} close_status,
		#{item.closeDescribe,jdbcType=VARCHAR} close_describe,
		#{item.content,jdbcType=VARCHAR} content,
		now()
		FROM dual
	</foreach>
	) a
    </insert>
    
    <!-- 查询单条交易订单数据 -->
    <select id="queryTradeData" parameterType="java.util.Map" resultType="com.ch.jrq.domain.TradeData">
		SELECT
			order_id "orderId",
			trader_id "traderId",
			trader_name "traderName",
			symbol,
			open_time "openTime",
			close_time "closeTime",
			open_price "openPrice",
			close_price "closePrice",
			volume,
			stop_loss "stopLoss",
			take_profit "takeProfit",
			profit,
			open_status "openStatus",
			open_describe "openDescribe",
			close_status "closeStatus",
			close_describe "closeDescribe"
		FROM
			jrq_order_info a
        <where>
        <include refid="whereConditionsForOrder"></include>
        </where>
    </select>
    
    <!-- 新增单条交易订单数据 -->
    <insert id="addOrderInfo">
		INSERT INTO jrq_order_info (
			order_id,
			trader_id,
			trader_name,
			symbol,
			open_time,
			close_time,
			open_price,
			close_price,
			volume,
			stop_loss,
			take_profit,
			profit,
			open_status,
			open_describe,
			close_status,
			close_describe,
			content,
			create_time
		) SELECT
			#{tradeData.orderId,jdbcType=VARCHAR},
			#{tradeData.traderId,jdbcType=VARCHAR},
			#{tradeData.traderName,jdbcType=VARCHAR},
			#{tradeData.symbol,jdbcType=VARCHAR},
			#{tradeData.openTime,jdbcType=VARCHAR},
			#{tradeData.closeTime,jdbcType=VARCHAR},
			#{tradeData.openPrice,jdbcType=VARCHAR},
			#{tradeData.closePrice,jdbcType=VARCHAR},
			#{tradeData.volume,jdbcType=VARCHAR},
			#{tradeData.stopLoss,jdbcType=VARCHAR},
			#{tradeData.takeProfit,jdbcType=VARCHAR},
			#{tradeData.profit,jdbcType=VARCHAR},
			#{tradeData.openStatus,jdbcType=VARCHAR},
			#{tradeData.openDescribe,jdbcType=VARCHAR},
			#{tradeData.closeStatus,jdbcType=VARCHAR},
			#{tradeData.closeDescribe,jdbcType=VARCHAR},
			#{tradeData.content,jdbcType=VARCHAR},
			now()
		FROM
			DUAL
    </insert>
    
    <!-- 更新单条交易订单数据 -->
    <update id="updateOrderInfo">
		UPDATE jrq_order_info a
			SET 
			trader_id = #{tradeData.traderId},
			trader_name = #{tradeData.traderName},
			symbol = #{tradeData.symbol},
			open_time = #{tradeData.openTime},
			close_time = #{tradeData.closeTime},
			open_price = #{tradeData.openPrice},
			close_price = #{tradeData.closePrice},
			volume = #{tradeData.volume},
			stop_loss = #{tradeData.stopLoss},
			take_profit = #{tradeData.takeProfit},
			profit = #{tradeData.profit},
			open_status = #{tradeData.openStatus},
			open_describe = #{tradeData.openDescribe},
			close_status = #{tradeData.closeStatus},
			close_describe = #{tradeData.closeDescribe},
			content = #{tradeData.content},
			update_time = now()
		WHERE
			order_id = #{tradeData.orderId}   
    </update>
    
</mapper>